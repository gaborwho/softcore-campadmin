///////////////////////////////////////////////////////////
//  HázKezelõ.cs
//  Implementation of the Class HázKezelõ
//  Generated by Enterprise Architect
//  Created on:      26-ápr.-2013 20:01:56
//  Original author: lovi88
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;



using CampLogic.Db;
namespace CampLogic.TaborvezetoFunkciok
{
    public class HazKezelo
    {


        public HazKezelo()
        {

        }

        MyDbConnection conn = new MyDbConnection();

        /// 
        /// <param name="ház"></param>
        public bool HázLetrehozas(Haz haz)
        {

            int numH = (from k in conn.Hazak
                        where k.Név == haz.Név
                        select k).Count();

            // ha valakinek jobban tetszik 
            //int numH = conn.Házak.Count(m => m.Név == ház.Név);


            /*
             * Két házat azonos névvel nem lehet felvenni
             */
            if (numH > 0)
            {
                return false;
            }

            conn.Hazak.Add(haz);
            conn.SaveChanges();

            return true;
        }

        public List<Haz> HazListazas()
        {
            return (from k in conn.Hazak select k).ToList<Haz>();
        }

        /// 
        /// <param name="ház"></param>
        /// 

        /*
         * A ListBox-ban, a DbConnect-bõl származó Ház volt, amit módosítottak is
         * Mivel referencia típus, elvileg az eredeti is módosúlt, így elég csak menteni a módosításokat
         */
        public bool HázModositas(Haz ház)
        {
            conn.SaveChanges();

            return true;
        }

        /// 
        /// <param name="haz"></param>
        public bool HazTorles(Haz haz)
        {

            /*
             * Olyan házat nem lehet törölni, melynek vannak még szobái, hisz 
             * a szobában Reference constraint van a ház-ra.
             * A szobák nem létezhetnek ház nélkül, mert szobakezelõ igényli
             */
            for (int i = 0; i < haz.Szobak.Count; i++)
            {
                conn.Szobak.Remove(haz.Szobak[i]);
            }

            // kivételt dobna, ha egy olyan házat próbálnánk törölni, amihez még nem adtunk szobát
            if (haz.Szobak != null)
            {
                haz.Szobak.Clear();
                conn.SaveChanges();
            }


            conn.Hazak.Remove(haz);
            conn.SaveChanges();

            return true;
        }

    }//end HázKezelõ

}//end namespace TáborvezetõFunkciók